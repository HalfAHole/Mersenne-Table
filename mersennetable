#include <stdio.h>
#include <conio.h>
#include <math.h>
int main(void) {
long long unsigned int a=0, b=0, c=0, d=0, w=0, v=0, q=5, i=5, n=244, isprime=0, num[n+1], p=3;
_textcolor(15); for (a=1; a<=n; a++) {num[a]=0;}											// clean array
printf("Power    Mersenne #", 32); num[1]=3; num[2]=5; printf("%2llu", num[1]); printf("%2llu",num[2]);	// setup array elements missed by process		
while (i<=n) {w++; if (w==1) {i=i+2;} if (w==2) {i=i+4; w=0;} if (i>n) {break;} isprime=0;	// this sequence avoids multiples of 3
q=5; v=0; while (q<=sqrt(n)) {v++; if (v==1) {q=q+2;} if (v==2) {q=q+4; v=0;}
if (i%5==0) {isprime=1; break;}									// test for 5s
if (i%q==0 && i!=q)  {isprime=1; break;}}						// test for other primes
if (isprime==0) {num[p]=i; 										// add primes to num array
if (num[p]<100) {printf("%2d", num[p]);} 
if (num[p]>=100 && num[p]<200) {printf("%2d", num[p]-100);}
if (num[p]>=200) {printf("%2d", num[p]-200);} p++;}}			// print top row primes p to 299 (2 digits)
for (a=2; a<=p; a++) {printf("\n%2d ", a);						// print number 2 is taken to the power of
c=pow(2,a)-1; printf("%16llu", c);								// print Mersenne number
for (b=1; b<=p-1; b++) {d=c%num[b]; if (d==0) {_textcolor(4);}	// calculate mod, set colour for zero values
// printf("%3d ", d); _textcolor(15);							// print numbers
if (a==2||a==3||a==5||a==7||a==13||a==17||a==19||a==31||a==61||a==89||a==127) {_textcolor(11);}	// indicate (in blue) Mersenne primes)
if (c==num[b]) {_textcolor(2); } 								// set colour for factor of Mersenne prime (Mersenne number)
printf("%c%c", 219, 219); _textcolor(15);}}						// print symbol for mod!=0
printf("\n\n");
printf("Notes: \n");
printf("This is a table of Mersenne numbers divided by various prime numbers.\n");
printf("Column 1 is the number 2 is taken to to create the Mersenne number in the 2nd column.\n");
printf("Factors are in the top row.\n");
printf("A red square indicates that the Mersenne number is divisible by the prime in the top row.\n");
printf("Blue indicates a Mersenne prime. Their factors (themselves) is indicated by a green square.\n");
printf("If we follow 7 down we can see that it is a Mersenne prime (green square).\n");
printf("It is also a factor of 511, 32767, 2097151, 134217727 and so on.\n");
printf("Due to 64 bit limits 2^53 is as high as we can go.\n");
return (0);}
